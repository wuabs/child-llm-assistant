import random

# Ключевые слова по темам
strategy_map = {
    "неуверенность": ["не уверен", "сомнева", "не получится", "боюсь", "никому не нужен"],
    "усталость": ["устал", "ничего не хочется", "надоело"],
    "тревога": ["страшно", "тревожно", "волнуюсь", "переживаю"],
    "грусть": ["груст", "плакал", "обидно", "один", "плохо"],
    "провал": ["не сдал", "ошибка", "не получилось", "проиграл"],
    "шутка": ["ха", "лол", "смешно"]
}

# Стратегии по темам
theme_to_strategy = {
    "неуверенность": "ободрение",
    "усталость": "позитивное переосмысление",
    "тревога": "метафора",
    "грусть": "пример известного человека",
    "провал": "позитивное переосмысление",
    "шутка": "шутка"
}

# Функция классификации
def classify_strategy(child_input):
    for theme, keywords in strategy_map.items():
        if any(kw in child_input.lower() for kw in keywords):
            return theme_to_strategy.get(theme)
    return "ободрение"

# Генерация промпта
def build_prompt(child_input):
    strategy = classify_strategy(child_input)
    prompt = f"""Ты — добрый и внимательный друг ребёнка. Ребёнок говорит: "{child_input}"

    Ответь с поддержкой, используя стратегию: {strategy}.

    Стратегии могут быть:
    - пример известного человека
    - ободрение
    - позитивное переосмысление
    - метафора
    - шутка

    Ответ:"""
    
    return prompt
